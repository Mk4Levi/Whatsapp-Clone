/* eslint-disable */
/**
 * Generated data model types.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.10.0.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  DataModelFromSchemaDefinition,
  DocumentByName,
  DataModel,
  TableNamesInDataModel,
  SystemTableNames,
} from "convex/server";
import { v, Id } from "convex/values";
import type { GenericId } from "convex/values";
import schema from "../schema.js";

/**
 * The names of all of your Convex tables.
 */
// Define the Users table
type User = {
  _id: Id<"users">;
  _creationTime: number;
  name?: string;
  email: string;
  image: string;
  tokenIdentifier: string;
  isOnline: boolean;
};

// Define the Products table
type Product = {
  _id: Id<"products">;
  _creationTime: number;
  name: string;
  price: number;
};

// Define the full DataModel
export type MyDataModel = {
  users: {
    document: User;
    indexes: {
      by_email: { by: "email"; unique: true };
    };
  };
  products: {
    document: Product;
    indexes: {};
  };
};

// Export the DataModel so it can be used in your Convex server functions
export const dataModel: DataModel<MyDataModel> = {
  users: {
    document: {
      _id: v.id("users"),
      _creationTime: v.number(),
      name: v.optional(v.string()),
      email: v.string(),
      image: v.string(),
      tokenIdentifier: v.string(),
      isOnline: v.boolean(),
    },
    indexes: {
      by_email: { by: "email", unique: true },
    },
  },
  products: {
    document: {
      _id: v.id("products"),
      _creationTime: v.number(),
      name: v.string(),
      price: v.number(),
    },
    indexes: {},
  },
};

// Use the table names in your server functions
export type TableName = TableNamesInDataModel<MyDataModel>;

/**
 * The type of a document stored in Convex.
 *
 * @typeParam TableName - A string literal type of the table name (like "users").
 */
export type Doc<TableName extends TableNames> = DocumentByName<
  MyDataModel,
  TableName
>;

/**
 * An identifier for a document in Convex.
 *
 * Convex documents are uniquely identified by their `Id`, which is accessible
 * on the `_id` field. To learn more, see [Document IDs](https://docs.convex.dev/using/document-ids).
 *
 * Documents can be loaded using `db.get(id)` in query and mutation functions.
 *
 * IDs are just strings at runtime, but this type can be used to distinguish them from other
 * strings when type checking.
 *
 * @typeParam TableName - A string literal type of the table name (like "users").
 */
export type Id<TableName extends TableNames | SystemTableNames> =
  GenericId<TableName>;

/**
 * A type describing your Convex data model.
 *
 * This type includes information about what tables you have, the type of
 * documents stored in those tables, and the indexes defined on them.
 *
 * This type is used to parameterize methods like `queryGeneric` and
 * `mutationGeneric` to make them type-safe.
 */
export type DataModel = DataModelFromSchemaDefinition<typeof schema>;
